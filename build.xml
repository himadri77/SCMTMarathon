<?xml version="1.0" encoding="utf-8" ?>
<project name="SCMTMarathon" default="build" basedir=".">
    <!-- Arguments to gwtc and devmode targets -->
    <property name="gwt.args" value=""/>

    <!-- Configure path to GWT SDK -->
    <property name="gwt.sdk" location="C:/Utils/gwt-2.5.0.rc2"/>

    <property name="appengine.sdk" location="C:/Utils/appengine-java-sdk-1.7.2.1"/>
    <property name="objectify.jar" location="C:/Utils/objectify-3.1/objectify-3.1.jar"/>
    <property name="gwt-gae-channel.jar" location="c:/Utils/gwt-gae-channel-0.4-alpha/gwt-gae-channel-0.4-alpha.jar"/>
    <property name="itext.jar" location="c:/Utils/itext-5.3.3/itextpdf-5.3.3.jar"/>
    <property name="opencsv-2.3.jar" location="c:/Utils/opencsv-2.3/deploy/opencsv-2.3.jar"/>

    <path id="project.class.path">
        <pathelement location="war/WEB-INF/classes"/>
        <pathelement location="${gwt.sdk}/gwt-user.jar"/>
        <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
        <!-- Add any additional non-server libs (such as JUnit) -->
        <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
    </path>

    <path id="tools.class.path">
        <path refid="project.class.path"/>
        <!--google app engine-->
        <pathelement location="${appengine.sdk}/lib/appengine-tools-api.jar"/>
        <pathelement location="${appengine.sdk}/lib/agent/appengine-agent.jar"/>
        <fileset dir="${appengine.sdk}/lib/tools">
            <include name="**/asm-*.jar"/>
            <include name="**/datanucleus-enhancer-*.jar"/>
        </fileset>

        <pathelement location="${objectify.jar}"/>
        <pathelement location="${gwt-gae-channel.jar}"/>
        <pathelement location="${itext.jar}"/>
    </path>

    <target name="libs" description="Copy libs to WEB-INF/lib">
        <mkdir dir="war/WEB-INF/lib"/>
        <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar"/>
        <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet-deps.jar"/>
        <!-- Add any additional server libs that need to be copied -->
        <copy todir="war/WEB-INF/lib" flatten="true">
            <fileset dir="${appengine.sdk}/lib/user" includes="**/*.jar"/>
        </copy>
        <copy todir="war/WEB-INF/lib" file="${objectify.jar}"/>
        <copy todir="war/WEB-INF/lib" file="${gwt-gae-channel.jar}"/>
        <copy todir="war/WEB-INF/lib" file="${itext.jar}"/>
        <copy todir="war/WEB-INF/lib" file="${opencsv-2.3.jar}"/>
    </target>

    <target name="javac" depends="libs" description="Compile java source to bytecode">
        <mkdir dir="war/WEB-INF/classes"/>
        <javac srcdir="src" includes="**" encoding="utf-8"
               destdir="war/WEB-INF/classes"
               source="1.5" target="1.5" nowarn="true"
               debug="true" debuglevel="lines,vars,source">
            <classpath refid="project.class.path"/>
            <classpath refid="tools.class.path"/>
        </javac>
        <copy todir="war/WEB-INF/classes">
            <fileset dir="src" excludes="**/*.java"/>
        </copy>
        <taskdef
                name="datanucleusenhancer"
                classpathref="tools.class.path"
                classname="org.datanucleus.enhancer.tools.EnhancerTask"/>
        <datanucleusenhancer
                classpathref="tools.class.path"
                failonerror="true">
            <fileset dir="war/WEB-INF/classes" includes="**/*.class"/>
        </datanucleusenhancer>
    </target>

    <target name="gwtc" depends="javac" description="GWT compile to JavaScript (production mode)">
        <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
            <classpath>
                <pathelement location="src"/>
                <path refid="project.class.path"/>
                <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar"/>
                <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar"/>
            </classpath>
            <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
            <jvmarg value="-Xmx256M"/>
            <arg line="-war"/>
            <arg value="war"/>
            <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
            <arg line="${gwt.args}"/>
            <arg value="net.himadri.scmt.SCMTMarathon"/>
        </java>
    </target>

    <target name="devmode" depends="javac" description="Run development mode">
        <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
            <classpath>
                <pathelement location="src"/>
                <path refid="project.class.path"/>
                <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar"/>
                <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar"/>
                <path refid="tools.class.path"/>
            </classpath>
            <jvmarg value="-Xmx256M"/>
            <jvmarg value="-Xdebug" />
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000" />
            <arg value="-startupUrl"/>
            <arg value="SCMTMarathon.html"/>
            <arg line="-war"/>
            <arg value="war"/>
            <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
            <arg line="${gwt.args}"/>
            <arg value="-server"/>
            <arg value="com.google.appengine.tools.development.gwt.AppEngineLauncher"/>
            <arg value="net.himadri.scmt.SCMTMarathon"/>
        </java>
    </target>

    <target name="hosted" depends="devmode"
            description="Run development mode (NOTE: the 'hosted' target is deprecated)"/>

    <target name="build" depends="gwtc" description="Build this project"/>

    <target name="war" depends="build" description="Create a war file">
        <zip destfile="SCMTMarathon.war" basedir="war"/>
    </target>

    <target name="upload" depends="war" description="Upload to appengine">
        <exec executable="cmd">
            <arg value="/c"/>
            <arg value="${appengine.sdk}/bin/appcfg.cmd"/>
            <arg value="update"/>
            <arg value="war"/>
        </exec>
    </target>

    <target name="clean" description="Cleans this project">
        <delete dir="war/WEB-INF/classes" failonerror="false"/>
        <delete dir="war/WEB-INF/lib" failonerror="false"/>
        <delete dir="war/scmtmarathon" failonerror="false"/>
    </target>

</project>
